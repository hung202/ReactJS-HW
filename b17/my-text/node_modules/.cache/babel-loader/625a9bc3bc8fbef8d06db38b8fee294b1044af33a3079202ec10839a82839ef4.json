{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\dden\\\\ReactJS-HW\\\\my-text\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import { useForm } from \"react-hook-form\";\n\n// export default function App() {\n//   const {\n//     register,\n//     handleSubmit,\n//     watch,\n//     formState: { errors },\n//   } = useForm();\n//   const onSubmit = (data) => console.log(data);\n\n//   console.log(watch(\"example\"));\n\n//   return (\n//     <form onSubmit={handleSubmit(onSubmit)}>\n//       <input defaultValue=\"test\" {...register(\"example\")} />\n\n//       <input {...register(\"exampleRequired\", { required: true })} />\n\n//       {errors.exampleRequired && <span>This field is required</span>}\n\n//       <input type=\"submit\" />\n//     </form>\n//   );\n// }\n// import Select from \"react-select\";\n// import { useForm, Controller } from \"react-hook-form\";\n// // import Input from \"@material-ui/core/Input\";\n\n// const App = () => {\n//   const { control, handleSubmit } = useForm({\n//     defaultValues: {\n//       firstName: \"\",\n//       select: {},\n//     },\n//   });\n//   const onSubmit = (data) => console.log(data);\n\n//   return (\n//     <form onSubmit={handleSubmit(onSubmit)}>\n//       <Controller\n//         name=\"firstName\"\n//         control={control}\n//         render={({ field }) => <input {...field} />}\n//       />\n//       <Controller\n//         name=\"select\"\n//         control={control}\n//         render={({ field }) => (\n//           <Select\n//             {...field}\n//             options={[\n//               { value: \"chocolate\", label: \"Chocolate\" },\n//               { value: \"strawberry\", label: \"Strawberry\" },\n//               { value: \"vanilla\", label: \"Vanilla\" },\n//             ]}\n//           />\n//         )}\n//       />\n//       <input type=\"submit\" />\n//     </form>\n//   );\n// };\n// export default App;\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignupForm = () => {\n  _s();\n  // Pass the useFormik() hook initial form values and a submit function that will\n  // be called when the form is submitted\n  const formik = useFormik({\n    initialValues: {\n      email: \"\"\n    },\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: \"Email Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      onChange: formik.handleChange,\n      value: formik.values.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(SignupForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = SignupForm;\nvar _c;\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"names":["React","useFormik","jsxDEV","_jsxDEV","SignupForm","_s","formik","initialValues","email","onSubmit","values","alert","JSON","stringify","handleSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","name","type","onChange","handleChange","value","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/dden/ReactJS-HW/my-text/src/App.js"],"sourcesContent":["// import { useForm } from \"react-hook-form\";\n\n// export default function App() {\n//   const {\n//     register,\n//     handleSubmit,\n//     watch,\n//     formState: { errors },\n//   } = useForm();\n//   const onSubmit = (data) => console.log(data);\n\n//   console.log(watch(\"example\"));\n\n//   return (\n//     <form onSubmit={handleSubmit(onSubmit)}>\n//       <input defaultValue=\"test\" {...register(\"example\")} />\n\n//       <input {...register(\"exampleRequired\", { required: true })} />\n\n//       {errors.exampleRequired && <span>This field is required</span>}\n\n//       <input type=\"submit\" />\n//     </form>\n//   );\n// }\n// import Select from \"react-select\";\n// import { useForm, Controller } from \"react-hook-form\";\n// // import Input from \"@material-ui/core/Input\";\n\n// const App = () => {\n//   const { control, handleSubmit } = useForm({\n//     defaultValues: {\n//       firstName: \"\",\n//       select: {},\n//     },\n//   });\n//   const onSubmit = (data) => console.log(data);\n\n//   return (\n//     <form onSubmit={handleSubmit(onSubmit)}>\n//       <Controller\n//         name=\"firstName\"\n//         control={control}\n//         render={({ field }) => <input {...field} />}\n//       />\n//       <Controller\n//         name=\"select\"\n//         control={control}\n//         render={({ field }) => (\n//           <Select\n//             {...field}\n//             options={[\n//               { value: \"chocolate\", label: \"Chocolate\" },\n//               { value: \"strawberry\", label: \"Strawberry\" },\n//               { value: \"vanilla\", label: \"Vanilla\" },\n//             ]}\n//           />\n//         )}\n//       />\n//       <input type=\"submit\" />\n//     </form>\n//   );\n// };\n// export default App;\nimport React from \"react\";\nimport { useFormik } from \"formik\";\n\nconst SignupForm = () => {\n  // Pass the useFormik() hook initial form values and a submit function that will\n  // be called when the form is submitted\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n    },\n    onSubmit: (values) => {\n      alert(JSON.stringify(values, null, 2));\n    },\n  });\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <label htmlFor=\"email\">Email Address</label>\n      <input\n        id=\"email\"\n        name=\"email\"\n        type=\"email\"\n        onChange={formik.handleChange}\n        value={formik.values.email}\n      />\n\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB;EACA;EACA,MAAMC,MAAM,GAAGL,SAAS,CAAC;IACvBM,aAAa,EAAE;MACbC,KAAK,EAAE;IACT,CAAC;IACDC,QAAQ,EAAGC,MAAM,IAAK;MACpBC,KAAK,CAACC,IAAI,CAACC,SAAS,CAACH,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IACxC;EACF,CAAC,CAAC;EACF,oBACEP,OAAA;IAAMM,QAAQ,EAAEH,MAAM,CAACQ,YAAa;IAAAC,QAAA,gBAClCZ,OAAA;MAAOa,OAAO,EAAC,OAAO;MAAAD,QAAA,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eAC5CjB,OAAA;MACEkB,EAAE,EAAC,OAAO;MACVC,IAAI,EAAC,OAAO;MACZC,IAAI,EAAC,OAAO;MACZC,QAAQ,EAAElB,MAAM,CAACmB,YAAa;MAC9BC,KAAK,EAAEpB,MAAM,CAACI,MAAM,CAACF;IAAM;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC3B,eAEFjB,OAAA;MAAQoB,IAAI,EAAC,QAAQ;MAAAR,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAChC;AAEX,CAAC;AAACf,EAAA,CAzBID,UAAU;EAAA,QAGCH,SAAS;AAAA;AAAA0B,EAAA,GAHpBvB,UAAU;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
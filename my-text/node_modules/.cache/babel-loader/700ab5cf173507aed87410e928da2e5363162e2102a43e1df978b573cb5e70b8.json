{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";var initialState={value:0};export var counterSlice=createSlice({name:\"counter\",initialState:initialState,reducers:{increment:function increment(state){// Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n// doesn't actually mutate the state because it uses the Immer library,\n// which detects changes to a \"draft state\" and produces a brand new\n// immutable state based off those changes\nstate.value+=1;},decrement:function decrement(state){state.value-=1;},incrementByAmount:function incrementByAmount(state,action){state.value+=action.payload;}}});// Action creators are generated for each case reducer function\nvar _counterSlice$actions=counterSlice.actions,increment=_counterSlice$actions.increment,decrement=_counterSlice$actions.decrement,incrementByAmount=_counterSlice$actions.incrementByAmount;export{increment,decrement,incrementByAmount};export default counterSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","value","counterSlice","name","reducers","increment","state","decrement","incrementByAmount","action","payload","_counterSlice$actions","actions","reducer"],"sources":["C:/Users/User/Desktop/dden/ReactJS-HW/my-text/src/counterSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  value: 0,\r\n};\r\n\r\nexport const counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState,\r\n  reducers: {\r\n    increment: (state) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: (state) => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\nexport default counterSlice.reducer;\r\n"],"mappings":"AAAA,OAASA,WAAW,KAAQ,kBAAkB,CAE9C,GAAM,CAAAC,YAAY,CAAG,CACnBC,KAAK,CAAE,CACT,CAAC,CAED,MAAO,IAAM,CAAAC,YAAY,CAAGH,WAAW,CAAC,CACtCI,IAAI,CAAE,SAAS,CACfH,YAAY,CAAZA,YAAY,CACZI,QAAQ,CAAE,CACRC,SAAS,CAAE,SAAAA,UAACC,KAAK,CAAK,CACpB;AACA;AACA;AACA;AACAA,KAAK,CAACL,KAAK,EAAI,CAAC,CAClB,CAAC,CACDM,SAAS,CAAE,SAAAA,UAACD,KAAK,CAAK,CACpBA,KAAK,CAACL,KAAK,EAAI,CAAC,CAClB,CAAC,CACDO,iBAAiB,CAAE,SAAAA,kBAACF,KAAK,CAAEG,MAAM,CAAK,CACpCH,KAAK,CAACL,KAAK,EAAIQ,MAAM,CAACC,OAAO,CAC/B,CACF,CACF,CAAC,CAAC,CAEF;AACO,IAAAC,qBAAA,CAAoDT,YAAY,CAACU,OAAO,CAAhEP,SAAS,CAAAM,qBAAA,CAATN,SAAS,CAAEE,SAAS,CAAAI,qBAAA,CAATJ,SAAS,CAAEC,iBAAiB,CAAAG,qBAAA,CAAjBH,iBAAiB,CAA0B,OAAAH,SAAA,CAAAE,SAAA,CAAAC,iBAAA,EAEhF,cAAe,CAAAN,YAAY,CAACW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}